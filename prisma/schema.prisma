generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Track {
  // exact model
  id        Int       @id @default(autoincrement())
  name      String
  explicit  Boolean   @default(false)
  text      String?
  listens   Int       @default(0)
  picture   String
  audio     String
  published DateTime  @default(now())
  comments  Comment[]

  // relations
  artistId      Int
  userAlbumId   Int?
  artistAlbumId Int?
  userId        Int?
  artist        Artist       @relation(fields: [artistId], references: [id])
  UserAlbum     UserAlbum?   @relation(fields: [userAlbumId], references: [id])
  ArtistAlbum   ArtistAlbum? @relation(fields: [artistAlbumId], references: [id])
  User          User?        @relation(fields: [userId], references: [id])
}

model Artist {
  // exact model
  id         Int     @id @default(autoincrement())
  name       String
  isVerified Boolean @default(false)

  // relations
  tracks Track[]
  albums ArtistAlbum[]
}

model Comment {
  // exact model
  id        Int      @id @default(autoincrement())
  text      String
  published DateTime @default(now())

  // relations
  userId  Int
  trackId Int
  author  User  @relation(fields: [userId], references: [id])
  track   Track @relation(fields: [trackId], references: [id])
}

model User {
  // exact model
  id       Int     @id @default(autoincrement())
  name     String  @default("Unknown name")
  surname  String  @default("Unknown surname")
  email    String  @unique
  avatar   String? @default("no_user.png")
  password String

  // relations
  likedTracks Track[]
  albums      UserAlbum[]
  comments    Comment[]
}

model UserAlbum {
  // exact model
  id          Int    @id @default(autoincrement())
  name        String
  description String
  picture     String

  // relations
  userId Int
  owner  User    @relation(fields: [userId], references: [id])
  tracks Track[]
}

model ArtistAlbum {
  // exact model
  id          Int    @id @default(autoincrement())
  name        String
  description String
  picture     String

  // relations
  artistId Int
  author   Artist  @relation(fields: [artistId], references: [id])
  tracks   Track[]
}
